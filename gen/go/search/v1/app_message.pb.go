// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: search/v1/app_message.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is what will be exchanged between middlewares
type MessageExchangeRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ChannelId string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // We'll use UUIDv4. It's a global ID shared by all participants
	// This is necessary because URLs don't univocally determine apps. There can be multiple applications
	// behind the same middleware (there is a 1:1 mapping between URLs and middlewares)
	SenderId      string      `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`          // appid de app emisora
	RecipientId   string      `protobuf:"bytes,3,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // appid de app receptora
	Content       *AppMessage `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageExchangeRequest) Reset() {
	*x = MessageExchangeRequest{}
	mi := &file_search_v1_app_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageExchangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageExchangeRequest) ProtoMessage() {}

func (x *MessageExchangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_app_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageExchangeRequest.ProtoReflect.Descriptor instead.
func (*MessageExchangeRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_app_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageExchangeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *MessageExchangeRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *MessageExchangeRequest) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *MessageExchangeRequest) GetContent() *AppMessage {
	if x != nil {
		return x.Content
	}
	return nil
}

// This is what will be sent from an app to the middleware
type AppSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Recipient     string                 `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"` // name of the recipient in the local contract
	Message       *AppMessage            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppSendRequest) Reset() {
	*x = AppSendRequest{}
	mi := &file_search_v1_app_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSendRequest) ProtoMessage() {}

func (x *AppSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_app_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSendRequest.ProtoReflect.Descriptor instead.
func (*AppSendRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_app_message_proto_rawDescGZIP(), []int{1}
}

func (x *AppSendRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AppSendRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *AppSendRequest) GetMessage() *AppMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// This is what will be sent from the middleware to a local app
type AppRecvResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Sender        string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"` // name of the sender in the local contract
	Message       *AppMessage            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppRecvResponse) Reset() {
	*x = AppRecvResponse{}
	mi := &file_search_v1_app_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppRecvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRecvResponse) ProtoMessage() {}

func (x *AppRecvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_app_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRecvResponse.ProtoReflect.Descriptor instead.
func (*AppRecvResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_app_message_proto_rawDescGZIP(), []int{2}
}

func (x *AppRecvResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *AppRecvResponse) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *AppRecvResponse) GetMessage() *AppMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// This is the message content that is sent by the app (this is copied as-is by the middlewares)
// TODO: we may want to use self-describing messages to have a rich type system for messages!
// https://protobuf.dev/programming-guides/techniques/#self-description
type AppMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Body          []byte                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppMessage) Reset() {
	*x = AppMessage{}
	mi := &file_search_v1_app_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage) ProtoMessage() {}

func (x *AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_app_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage.ProtoReflect.Descriptor instead.
func (*AppMessage) Descriptor() ([]byte, []int) {
	return file_search_v1_app_message_proto_rawDescGZIP(), []int{3}
}

func (x *AppMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AppMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_search_v1_app_message_proto protoreflect.FileDescriptor

const file_search_v1_app_message_proto_rawDesc = "" +
	"\n" +
	"\x1bsearch/v1/app_message.proto\x12\tsearch.v1\"\xa8\x01\n" +
	"\x16MessageExchangeRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12!\n" +
	"\frecipient_id\x18\x03 \x01(\tR\vrecipientId\x12/\n" +
	"\acontent\x18\x04 \x01(\v2\x15.search.v1.AppMessageR\acontent\"~\n" +
	"\x0eAppSendRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1c\n" +
	"\trecipient\x18\x02 \x01(\tR\trecipient\x12/\n" +
	"\amessage\x18\x03 \x01(\v2\x15.search.v1.AppMessageR\amessage\"y\n" +
	"\x0fAppRecvResponse\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\tR\x06sender\x12/\n" +
	"\amessage\x18\x03 \x01(\v2\x15.search.v1.AppMessageR\amessage\"4\n" +
	"\n" +
	"AppMessage\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04body\x18\x02 \x01(\fR\x04bodyBa\n" +
	"\x1car.com.montepagano.search.v1ZAgithub.com/SEArch-Service-Execution-Architecture/search/gen/go/v1b\x06proto3"

var (
	file_search_v1_app_message_proto_rawDescOnce sync.Once
	file_search_v1_app_message_proto_rawDescData []byte
)

func file_search_v1_app_message_proto_rawDescGZIP() []byte {
	file_search_v1_app_message_proto_rawDescOnce.Do(func() {
		file_search_v1_app_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_v1_app_message_proto_rawDesc), len(file_search_v1_app_message_proto_rawDesc)))
	})
	return file_search_v1_app_message_proto_rawDescData
}

var file_search_v1_app_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_search_v1_app_message_proto_goTypes = []any{
	(*MessageExchangeRequest)(nil), // 0: search.v1.MessageExchangeRequest
	(*AppSendRequest)(nil),         // 1: search.v1.AppSendRequest
	(*AppRecvResponse)(nil),        // 2: search.v1.AppRecvResponse
	(*AppMessage)(nil),             // 3: search.v1.AppMessage
}
var file_search_v1_app_message_proto_depIdxs = []int32{
	3, // 0: search.v1.MessageExchangeRequest.content:type_name -> search.v1.AppMessage
	3, // 1: search.v1.AppSendRequest.message:type_name -> search.v1.AppMessage
	3, // 2: search.v1.AppRecvResponse.message:type_name -> search.v1.AppMessage
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_search_v1_app_message_proto_init() }
func file_search_v1_app_message_proto_init() {
	if File_search_v1_app_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_v1_app_message_proto_rawDesc), len(file_search_v1_app_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_search_v1_app_message_proto_goTypes,
		DependencyIndexes: file_search_v1_app_message_proto_depIdxs,
		MessageInfos:      file_search_v1_app_message_proto_msgTypes,
	}.Build()
	File_search_v1_app_message_proto = out.File
	file_search_v1_app_message_proto_goTypes = nil
	file_search_v1_app_message_proto_depIdxs = nil
}
