// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: search/v1/broker.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BrokerChannelRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Contract *GlobalContract        `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"` // requirements contract
	// subset of contract's participants that are already decided. This should at least
	// include the initiator's RemoteParticpant data
	PresetParticipants map[string]*RemoteParticipant `protobuf:"bytes,2,rep,name=preset_participants,json=presetParticipants,proto3" json:"preset_participants,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BrokerChannelRequest) Reset() {
	*x = BrokerChannelRequest{}
	mi := &file_search_v1_broker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerChannelRequest) ProtoMessage() {}

func (x *BrokerChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_broker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerChannelRequest.ProtoReflect.Descriptor instead.
func (*BrokerChannelRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_broker_proto_rawDescGZIP(), []int{0}
}

func (x *BrokerChannelRequest) GetContract() *GlobalContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *BrokerChannelRequest) GetPresetParticipants() map[string]*RemoteParticipant {
	if x != nil {
		return x.PresetParticipants
	}
	return nil
}

type BrokerChannelResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	ChannelId     string                        `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                                                                // uuidv4
	Participants  map[string]*RemoteParticipant `protobuf:"bytes,3,rep,name=participants,proto3" json:"participants,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // preset + brokered participants
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokerChannelResponse) Reset() {
	*x = BrokerChannelResponse{}
	mi := &file_search_v1_broker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerChannelResponse) ProtoMessage() {}

func (x *BrokerChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_broker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerChannelResponse.ProtoReflect.Descriptor instead.
func (*BrokerChannelResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_broker_proto_rawDescGZIP(), []int{1}
}

func (x *BrokerChannelResponse) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *BrokerChannelResponse) GetParticipants() map[string]*RemoteParticipant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type RegisterProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contract      *LocalContract         `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterProviderRequest) Reset() {
	*x = RegisterProviderRequest{}
	mi := &file_search_v1_broker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProviderRequest) ProtoMessage() {}

func (x *RegisterProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_broker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProviderRequest.ProtoReflect.Descriptor instead.
func (*RegisterProviderRequest) Descriptor() ([]byte, []int) {
	return file_search_v1_broker_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterProviderRequest) GetContract() *LocalContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *RegisterProviderRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// The registry assigns the provider an ID
type RegisterProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterProviderResponse) Reset() {
	*x = RegisterProviderResponse{}
	mi := &file_search_v1_broker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProviderResponse) ProtoMessage() {}

func (x *RegisterProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_broker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProviderResponse.ProtoReflect.Descriptor instead.
func (*RegisterProviderResponse) Descriptor() ([]byte, []int) {
	return file_search_v1_broker_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterProviderResponse) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type RemoteParticipant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                  // points to the middleware for this participant
	AppId         string                 `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // points to the specific app that is served by the middleware
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteParticipant) Reset() {
	*x = RemoteParticipant{}
	mi := &file_search_v1_broker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteParticipant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteParticipant) ProtoMessage() {}

func (x *RemoteParticipant) ProtoReflect() protoreflect.Message {
	mi := &file_search_v1_broker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteParticipant.ProtoReflect.Descriptor instead.
func (*RemoteParticipant) Descriptor() ([]byte, []int) {
	return file_search_v1_broker_proto_rawDescGZIP(), []int{4}
}

func (x *RemoteParticipant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RemoteParticipant) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

var File_search_v1_broker_proto protoreflect.FileDescriptor

const file_search_v1_broker_proto_rawDesc = "" +
	"\n" +
	"\x16search/v1/broker.proto\x12\tsearch.v1\x1a\x19search/v1/contracts.proto\"\x9c\x02\n" +
	"\x14BrokerChannelRequest\x125\n" +
	"\bcontract\x18\x01 \x01(\v2\x19.search.v1.GlobalContractR\bcontract\x12h\n" +
	"\x13preset_participants\x18\x02 \x03(\v27.search.v1.BrokerChannelRequest.PresetParticipantsEntryR\x12presetParticipants\x1ac\n" +
	"\x17PresetParticipantsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.search.v1.RemoteParticipantR\x05value:\x028\x01\"\xed\x01\n" +
	"\x15BrokerChannelResponse\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12V\n" +
	"\fparticipants\x18\x03 \x03(\v22.search.v1.BrokerChannelResponse.ParticipantsEntryR\fparticipants\x1a]\n" +
	"\x11ParticipantsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.search.v1.RemoteParticipantR\x05value:\x028\x01\"a\n" +
	"\x17RegisterProviderRequest\x124\n" +
	"\bcontract\x18\x01 \x01(\v2\x18.search.v1.LocalContractR\bcontract\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"1\n" +
	"\x18RegisterProviderResponse\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\"<\n" +
	"\x11RemoteParticipant\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\tR\x05appId2\xc4\x01\n" +
	"\rBrokerService\x12T\n" +
	"\rBrokerChannel\x12\x1f.search.v1.BrokerChannelRequest\x1a .search.v1.BrokerChannelResponse\"\x00\x12]\n" +
	"\x10RegisterProvider\x12\".search.v1.RegisterProviderRequest\x1a#.search.v1.RegisterProviderResponse\"\x00Ba\n" +
	"\x1car.com.montepagano.search.v1ZAgithub.com/SEArch-Service-Execution-Architecture/search/gen/go/v1b\x06proto3"

var (
	file_search_v1_broker_proto_rawDescOnce sync.Once
	file_search_v1_broker_proto_rawDescData []byte
)

func file_search_v1_broker_proto_rawDescGZIP() []byte {
	file_search_v1_broker_proto_rawDescOnce.Do(func() {
		file_search_v1_broker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_search_v1_broker_proto_rawDesc), len(file_search_v1_broker_proto_rawDesc)))
	})
	return file_search_v1_broker_proto_rawDescData
}

var file_search_v1_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_search_v1_broker_proto_goTypes = []any{
	(*BrokerChannelRequest)(nil),     // 0: search.v1.BrokerChannelRequest
	(*BrokerChannelResponse)(nil),    // 1: search.v1.BrokerChannelResponse
	(*RegisterProviderRequest)(nil),  // 2: search.v1.RegisterProviderRequest
	(*RegisterProviderResponse)(nil), // 3: search.v1.RegisterProviderResponse
	(*RemoteParticipant)(nil),        // 4: search.v1.RemoteParticipant
	nil,                              // 5: search.v1.BrokerChannelRequest.PresetParticipantsEntry
	nil,                              // 6: search.v1.BrokerChannelResponse.ParticipantsEntry
	(*GlobalContract)(nil),           // 7: search.v1.GlobalContract
	(*LocalContract)(nil),            // 8: search.v1.LocalContract
}
var file_search_v1_broker_proto_depIdxs = []int32{
	7, // 0: search.v1.BrokerChannelRequest.contract:type_name -> search.v1.GlobalContract
	5, // 1: search.v1.BrokerChannelRequest.preset_participants:type_name -> search.v1.BrokerChannelRequest.PresetParticipantsEntry
	6, // 2: search.v1.BrokerChannelResponse.participants:type_name -> search.v1.BrokerChannelResponse.ParticipantsEntry
	8, // 3: search.v1.RegisterProviderRequest.contract:type_name -> search.v1.LocalContract
	4, // 4: search.v1.BrokerChannelRequest.PresetParticipantsEntry.value:type_name -> search.v1.RemoteParticipant
	4, // 5: search.v1.BrokerChannelResponse.ParticipantsEntry.value:type_name -> search.v1.RemoteParticipant
	0, // 6: search.v1.BrokerService.BrokerChannel:input_type -> search.v1.BrokerChannelRequest
	2, // 7: search.v1.BrokerService.RegisterProvider:input_type -> search.v1.RegisterProviderRequest
	1, // 8: search.v1.BrokerService.BrokerChannel:output_type -> search.v1.BrokerChannelResponse
	3, // 9: search.v1.BrokerService.RegisterProvider:output_type -> search.v1.RegisterProviderResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_search_v1_broker_proto_init() }
func file_search_v1_broker_proto_init() {
	if File_search_v1_broker_proto != nil {
		return
	}
	file_search_v1_contracts_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_search_v1_broker_proto_rawDesc), len(file_search_v1_broker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_v1_broker_proto_goTypes,
		DependencyIndexes: file_search_v1_broker_proto_depIdxs,
		MessageInfos:      file_search_v1_broker_proto_msgTypes,
	}.Build()
	File_search_v1_broker_proto = out.File
	file_search_v1_broker_proto_goTypes = nil
	file_search_v1_broker_proto_depIdxs = nil
}
