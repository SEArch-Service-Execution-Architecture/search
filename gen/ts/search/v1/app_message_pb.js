// @generated by protoc-gen-es v1.3.3
// @generated from file search/v1/app_message.proto (package search.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * This is what will be exchanged between middlewares
 *
 * @generated from message search.v1.MessageExchangeRequest
 */
export const MessageExchangeRequest = proto3.makeMessageType(
  "search.v1.MessageExchangeRequest",
  () => [
    { no: 1, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "recipient_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "content", kind: "message", T: AppMessage },
  ],
);

/**
 * This is what will be sent from an app to the middleware
 *
 * @generated from message search.v1.AppSendRequest
 */
export const AppSendRequest = proto3.makeMessageType(
  "search.v1.AppSendRequest",
  () => [
    { no: 1, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "recipient", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message", kind: "message", T: AppMessage },
  ],
);

/**
 * This is what will be sent from the middleware to a local app
 *
 * @generated from message search.v1.AppRecvResponse
 */
export const AppRecvResponse = proto3.makeMessageType(
  "search.v1.AppRecvResponse",
  () => [
    { no: 1, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sender", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message", kind: "message", T: AppMessage },
  ],
);

/**
 * This is the message content that is sent by the app (this is copied as-is by the middlewares)
 * TODO: we may want to use self-describing messages to have a rich type system for messages!
 * https://protobuf.dev/programming-guides/techniques/#self-description
 *
 * @generated from message search.v1.AppMessage
 */
export const AppMessage = proto3.makeMessageType(
  "search.v1.AppMessage",
  () => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "body", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

