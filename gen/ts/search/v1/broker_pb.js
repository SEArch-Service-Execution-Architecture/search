// @generated by protoc-gen-es v1.3.3
// @generated from file search/v1/broker.proto (package search.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { GlobalContract, LocalContract } from "./contracts_pb.js";

/**
 * @generated from message search.v1.BrokerChannelRequest
 */
export const BrokerChannelRequest = proto3.makeMessageType(
  "search.v1.BrokerChannelRequest",
  () => [
    { no: 1, name: "contract", kind: "message", T: GlobalContract },
    { no: 2, name: "preset_participants", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RemoteParticipant} },
  ],
);

/**
 * @generated from message search.v1.BrokerChannelResponse
 */
export const BrokerChannelResponse = proto3.makeMessageType(
  "search.v1.BrokerChannelResponse",
  () => [
    { no: 2, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "participants", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: RemoteParticipant} },
  ],
);

/**
 * @generated from message search.v1.RegisterProviderRequest
 */
export const RegisterProviderRequest = proto3.makeMessageType(
  "search.v1.RegisterProviderRequest",
  () => [
    { no: 1, name: "contract", kind: "message", T: LocalContract },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * The registry assigns the provider an ID
 *
 * @generated from message search.v1.RegisterProviderResponse
 */
export const RegisterProviderResponse = proto3.makeMessageType(
  "search.v1.RegisterProviderResponse",
  () => [
    { no: 1, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message search.v1.RemoteParticipant
 */
export const RemoteParticipant = proto3.makeMessageType(
  "search.v1.RemoteParticipant",
  () => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "app_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

